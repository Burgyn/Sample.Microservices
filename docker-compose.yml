version: '3.4'

services:
  gateway:
    image: ${REGISTRY}microservices/gateway:${SERVICES_TAG}
    ports:
      - 5000:5000

  users:
    image: ${REGISTRY}microservices/users:${SERVICES_TAG}
    depends_on:
      - storage-seed

  basket:
    image: ${REGISTRY}microservices/basket:${SERVICES_TAG}
    depends_on:
      - redis

  ordering:
    image: ${REGISTRY}microservices/ordering:${SERVICES_TAG}
    depends_on:
      - sql-db-init

  catalog:
    image: ${REGISTRY}microservices/catalog:${SERVICES_TAG}
    depends_on:
      - sql-db-init

  search:
    image: ${REGISTRY}microservices/search:${SERVICES_TAG}
    depends_on:
      - catalog
    environment:
      - AzureWebJobsStorage=UseDevelopmentStorage=true;DevelopmentStorageProxyUri=http://host.docker.internal;
      - Catalog=Server=database,1433;Database=Catalog;User Id=SA;Password=str0ngP@ass;

  storage:
    image: mcr.microsoft.com/azure-storage/azurite
    restart: on-failure
    ports:
      - 10001:10001 # blob storage
      - 10002:10002 # table storage

  storage-seed:
    image: krossk/storage-seed
    environment:
      - TABLES=Users
      - HOST_NAME=storage
    depends_on:
      - storage

  database:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=str0ngP@ass
      - MSSQL_PID=Developer
    ports:
      - 1434:1433

  sql-db-init:
    image: krossk/mssql-seed
    environment:
      - MSSQL_HOST_NAME=database
      - SA_PASSWORD=str0ngP@ass
      - DATABASES=Catalog,Orders
    depends_on:
      - database

  redis:
    image: redis
    restart: on-failure